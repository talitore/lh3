openapi: 3.0.3
info:
  title: Runs API - Phase 4
  version: v1.0.0
  description: API for managing Runs, RSVPs, Attendance, and Photo Uploads.

servers:
  - url: /api # Base path for all API endpoints
    description: Development server

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: next-auth.session-token # Adjust if your session cookie name is different

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        errors: # Optional, for validation errors
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
        - message

    User:
      type: object
      properties:
        id:
          type: string
          format: cuid
        name:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true # Depending on NextAuth setup, email might be null for some users
        image:
          type: string
          format: url
          nullable: true
        role:
          type: string
          enum: [user, organizer, admin]
          default: user

    RunBase:
      type: object
      properties:
        number:
          type: integer
          description: Unique run number.
        descriptor:
          type: string
          minLength: 3
          description: Short descriptor for the run.
        dateTime:
          type: string
          format: date-time
          description: ISO8601 date and time of the run.
        address:
          type: string
          minLength: 5
          description: Address of the run start point.
        lat:
          type: number
          format: float
          nullable: true
        lng:
          type: number
          format: float
          nullable: true
        introLink:
          type: string
          format: url
          nullable: true
          description: Optional introductory link for the run.

    Run:
      allOf:
        - $ref: '#/components/schemas/RunBase'
        - type: object
          properties:
            id:
              type: string
              format: cuid
            organizerId:
              type: string
              format: cuid
            organizer:
              $ref: '#/components/schemas/User' # Simplified user object
            rsvpYesCount:
              type: integer
              description: Count of YES RSVPs for this run.
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    RunDetailed:
      allOf:
        - $ref: '#/components/schemas/Run'
        - type: object
          properties:
            rsvps:
              type: array
              items:
                $ref: '#/components/schemas/RSVPWithUser'
            attendees:
              type: array
              items:
                $ref: '#/components/schemas/AttendanceWithUser'
            photos:
              type: array
              items:
                $ref: '#/components/schemas/PhotoDetails'
            rsvpCounts: # Detailed counts
              type: object
              properties:
                yes: { type: integer }
                no: { type: integer }
                maybe: { type: integer }

    RSVPStatus:
      type: string
      enum: [YES, NO, MAYBE]

    RSVP:
      type: object
      properties:
        id:
          type: string
          format: cuid
        runId:
          type: string
          format: cuid
        userId:
          type: string
          format: cuid
        status:
          $ref: '#/components/schemas/RSVPStatus'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    RSVPWithUser:
      allOf:
        - $ref: '#/components/schemas/RSVP'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/User' # Simplified user for RSVP list

    Attendance:
      type: object
      properties:
        id:
          type: string
          format: cuid
        runId:
          type: string
          format: cuid
        userId:
          type: string
          format: cuid
        markedAt:
          type: string
          format: date-time
          description: Timestamp when attendance was marked.

    AttendanceWithUser:
      allOf:
        - $ref: '#/components/schemas/Attendance'
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/User' # Simplified user for attendance list

    Photo:
      type: object
      properties:
        id:
          type: string
          format: cuid
        storageKey:
          type: string
          description: Key of the photo in S3.
        url:
          type: string
          format: url
          nullable: true
          description: Full URL of the photo after confirmation.
        caption:
          type: string
          maxLength: 500
          nullable: true
        runId:
          type: string
          format: cuid
        uploaderId:
          type: string
          format: cuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PhotoDetails: # Photo details as returned in RunDetailed
      allOf:
        - $ref: '#/components/schemas/Photo'
        - type: object
          properties:
            uploadedBy:
              $ref: '#/components/schemas/User' # Simplified user for photo uploader

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        totalRuns:
          type: integer
        totalPages:
          type: integer

security:
  - cookieAuth: [] # Apply cookieAuth globally, operations can override if public

paths:
  /runs:
    post:
      summary: Create a new run
      tags:
        - Runs
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunBase' # Use RunBase for creation, organizerId from session
      responses:
        '201':
          description: Run created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run' # Returns the full Run object
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict (e.g., run number already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List all runs
      tags:
        - Runs
      security: [] # Publicly accessible
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [dateTime, number, descriptor]
            default: dateTime
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        - name: filterStatus
          in: query
          schema:
            type: string
            enum: [upcoming, past, all]
            default: all
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date-time
        - name: dateTo
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: A list of runs with pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Run'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /runs/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the run
        schema:
          type: string
          format: cuid
    get:
      summary: Get a specific run by ID
      tags:
        - Runs
      security: [] # Publicly accessible
      responses:
        '200':
          description: Detailed information about the run
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunDetailed'
        '400':
          description: Invalid run ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update an existing run
      tags:
        - Runs
      security:
        - cookieAuth: [] # Requires organizer/admin role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunBase' # All fields optional for update
      responses:
        '200':
          description: Run updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '400':
          description: Invalid input or run ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run not found or update failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict (e.g., run number already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /runs/{id}/rsvp:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the run to RSVP for
        schema:
          type: string
          format: cuid
    put:
      summary: Toggle RSVP status for a run
      tags:
        - RSVP
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/RSVPStatus'
              required:
                - status
      responses:
        '200':
          description: RSVP status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RSVPWithUser'
        '400':
          description: Invalid input or run ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run or User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /runs/{id}/attendance:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the run to mark attendance for
        schema:
          type: string
          format: cuid
    post:
      summary: Mark a user as attended for a run
      tags:
        - Attendance
      security:
        - cookieAuth: [] # Requires organizer/admin role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  format: cuid
                  description: ID of the user to mark as attended.
              required:
                - userId
      responses:
        '201':
          description: Attendance marked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceWithUser'
        '400':
          description: Invalid input or run ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden (insufficient permissions)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run or User to mark not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: User already marked as attended for this run
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /runs/{id}/photos/generate-signed-url:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the run to associate the photo with
        schema:
          type: string
          format: cuid
    post:
      summary: Generate a pre-signed URL for photo upload
      tags:
        - Photos
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                contentType:
                  type: string
                  example: image/jpeg
              required:
                - fileName
                - contentType
      responses:
        '200':
          description: Signed URL generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  signedUrl:
                    type: string
                    format: url
                  photoId:
                    type: string
                    format: cuid
                  storageKey:
                    type: string
        '400':
          description: Invalid input or run ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error or S3 configuration issue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /runs/{id}/photos/confirm-upload:
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the run (for route namespacing)
        schema:
          type: string
          format: cuid
    post:
      summary: Confirm photo upload and save metadata
      tags:
        - Photos
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                  format: cuid
                caption:
                  type: string
                  maxLength: 500
                  nullable: true
              required:
                - photoId
      responses:
        '200':
          description: Photo upload confirmed and metadata saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhotoDetails'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Photo record not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  image     String?
  runs      Run[]    @relation("OrganizedRuns")
  rsvps     RSVP[]
  photos    Photo[]  @relation("UploadedPhotos")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Run {
  id          String   @id @default(cuid())
  number      Int      @unique
  descriptor  String
  dateTime    DateTime
  address     String
  lat         Float?
  lng         Float?
  introLink   String?
  organizer   User     @relation("OrganizedRuns", fields: [organizerId], references: [id])
  organizerId String
  rsvps       RSVP[]
  photos      Photo[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RSVP {
  id        String     @id @default(cuid())
  run       Run        @relation(fields: [runId], references: [id])
  runId     String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  status    RSVPStatus
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum RSVPStatus {
  YES
  NO
  MAYBE
}

model Photo {
  id         String   @id @default(cuid())
  url        String
  run        Run      @relation(fields: [runId], references: [id])
  runId      String
  uploadedBy User     @relation("UploadedPhotos", fields: [uploaderId], references: [id])
  uploaderId String
  caption    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
